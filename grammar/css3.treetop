module CSS
  grammar CSS3
    # CSS3 grammar based on: http://www.w3.org/TR/css3-syntax ยง 4.2, 4.3

    rule stylesheet
      ('<!--' / '-->' / w / statement)*
    end

    rule statement
      (ruleset / at_rule)
    end

    rule at_rule
      atkeyword ws any* (block / ';' ws)
    end

    rule block
      '{' ws ( any / block / atkeyword ws / ';' ws )* ws '}' ws
    end

    rule ruleset
      selector? '{' ws declaration? (';' declaration?)* '}' ws
    end

    rule selector
      any+
    end

    rule declaration
      property ':' ws value
    end

    rule property
      ident ws
    end

    rule value
      (any / block / atkeyword ws)+
    end

    rule any
      # The grammar also includes DELIM in this rule, but DELIM is not
      # defined. See the "Changes from CSS2" section after the grammar.
      (ident / number / percentage / dimension / string / uri / hash /
       includes / function ws any* ')' / dashmatch / '(' ws any* ')' /
       '[' ws any* ']' / w)
    end

    # In the CSS spec, the following rules are in the lexer rather than the
    # parser. As we're using a PEG, we have no need of a separate lexing step.

    rule ident
      '-'? ([a-zA-Z] / '_' / nonascii / escape) nmchar*
    end

    rule atkeyword
      '@' ident
    end

    rule hash
      '#' ident
    end

    rule percentage
      number '%'
    end

    rule dimension
      number ident
    end

    rule uri
      'url(' ws (string / urlchar*) ws ')'
    end

    rule unicode_range
      'U+' [0-9A-F?] 1..6 ('-' [0-9A-F] 1..6)?
    end

    rule comment
      '/*' [^*]* '*'+ ([^/] [^*]* '*'+)* '/'
    end

    rule function
      ident '('
    end

    rule includes
      '~='
    end

    rule dashmatch
      '|='
    end

    rule prefixmatch
      '^='
    end

    rule suffixmatch
      '$='
    end

    rule substringmatch
      '*='
    end

    rule name
      nmchar+
    end

    rule nonascii
      [\u80-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]
    end

    rule unicode
      # See ยง 4.1
      '\\' [0-9a-fA-F] 1..6 w?
    end

    rule escape
      unicode / '\\' [\u20-\u7E\u80-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]
    end

    rule nmchar
      [a-zA-Z0-9] / '-' / '_' / nonascii / escape
    end

    rule number
      [0-9]* '.' [0-9]+ / [0-9]+
    end

    rule string
      '"' (stringchar / "'")* '"' / "'" (stringchar / '"') "'"
    end

    rule stringchar
      urlchar / "\x20" / '\\' nl
    end

    rule urlchar
      [\x9\x21\x23-\x26\x27-\x7E] / nonascii / escape
    end

    # Newline
    rule nl
      "\n" / "\r\n" / "\r" / "\f"
    end

    # Whitespace
    rule w
      "\t" / "\n" / "\f" / "\r" / ' '
    end
    rule ws
      w*
    end
  end
end
